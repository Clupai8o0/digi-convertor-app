.inputGroup {
	position: relative;
	width: 100%;
}

.input {
	border: solid 1.5px var(--input-border-initial);
	border-radius: 1rem;
	background: none;
	padding: 16px;
	font-family: Lato, Arial, Helvetica, sans-serif;
	font-size: 20px;
	color: var(--color);
	font-weight: 500;
	transition: border 150ms cubic-bezier(0.4, 0, 0.2, 1);
	width: 100%;
}

.userLabel {
	font-family: Poppins, Arial, Helvetica, sans-serif;
	font-size: 20px;
	font-weight: 500;
	color: var(--input-placeholder-color);

	position: absolute;
	left: 16px;
	pointer-events: none;

	transform: translateY(1.2rem);
	transition: 150ms cubic-bezier(0.4, 0, 0.2, 1);
}

.input[data-type="Binary"]:focus,
.input[data-type="Binary"]:valid {
	outline: none;
	border: 2px solid var(--binary);
}
.input[data-type="Decimal"]:focus,
.input[data-type="Decimal"]:valid {
	outline: none;
	border: 2px solid var(--decimal);
}
.input[data-type="Octal"]:focus,
.input[data-type="Octal"]:valid {
	outline: none;
	border: 2px solid var(--octal);
}
.input[data-type="Hexadecimal"]:focus,
.input[data-type="Hexadecimal"]:valid {
	outline: none;
	border: 2px solid var(--hexadecimal);
}

.input:focus ~ .userLabel,
.input:valid ~ .userLabel {
	transform: translateY(-50%) scale(0.7) translateX(-20%);
	background-color: var(--card-background);
	padding: 0 0.4em;
}
.input[data-type="Binary"]:focus ~ .userLabel,
.input[data-type="Binary"]:valid ~ .userLabel {
	color: var(--binary);
}
.input[data-type="Decimal"]:focus ~ .userLabel,
.input[data-type="Decimal"]:valid ~ .userLabel {
	color: var(--decimal);
}
.input[data-type="Octal"]:focus ~ .userLabel,
.input[data-type="Octal"]:valid ~ .userLabel {
	color: var(--octal);
}
.input[data-type="Hexadecimal"]:focus ~ .userLabel,
.input[data-type="Hexadecimal"]:valid ~ .userLabel {
	color: var(--hexadecimal);
}


.converted {
	width: 100%;
	border: solid 1.5px var(--input-border-initial);
	padding: 16px;

	display: flex;
	justify-content: space-between;
	align-items: center;

	border-radius: 1rem;
	cursor: pointer;
	transition: 0.2s all;
}

.converted:hover {
	background: rgb(247, 247, 247);
}
.converted:hover svg path {
	fill: var(--input-selected-color);
}

.converted p {
	color: var(--input-placeholder-color);
	font-size: 20px;
	font-weight: 500;
	font-family: Poppins, Arial, Helvetica, sans-serif;
}

.converted p.hasValue {
	font-family: Poppins, Arial, Helvetica, sans-serif;
	color: black;
}

.converted svg path {
	fill: var(--input-placeholder-color);
	transition: 0.2s all;
	stroke-width: 1;
}

.converted p.has-value {
	color: var(--color);
}